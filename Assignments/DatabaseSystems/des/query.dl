% Problem 1
twoMovies(Name, Title1, Title2) :-
    casting(A, M1, _),
    casting(A, M2, _),
    M1 < M2,
    movie(M1, Title1, _, _, _),
    movie(M2, Title2, _, _, _),
    actor(A, Name).

% Problem 2
linkedMovies(From, To) :-
    movie(M1, From, _, _, _),
    movie(M2, To, _, _, _),
    casting(A, M1, _),
    casting(A, M2, _),
    M1 \= M2.

linkedMovies(From, To) :-
    linkedMovies(From, Intermediate),
    linkedMovies(Intermediate, To),
    From \= To.

% Problem 3
movieCastSize(Title, Count) :-
    movie(M, Title, _, _, _),
    count(casting(A, M, _), A, Count).

% Problem 4
% Step 1: Identify "Star Wars" and its decade
starWarsDecade(Y) :-
    movie(M, _, Y, _, _),
    M = 1.

% Step 2: Assign each movie to its decade
movieDecade(M, Y) :-
    movie(M, _, Y, _, _).

% Step 3: Identify movies directly linked to a later generation via actors
linkedByActor(M1, M2) :-
    movieDecade(M1, D1),
    movieDecade(M2, D2),
    casting(A, M1, _),
    casting(A, M2, _),
    D1 < D2.  % Enforce later movie relationship

% Step 4: Define movies in the same generation
generation(M1, M2) :-
    movieDecade(M1, D),
    movieDecade(M2, D),  % Same decade
    M1 \= M2.

% Step 5: Expand generations transitively through actor links
generation(M1, M2) :-
    generation(M1, M3),
    linkedByActor(M3, M2),
    M1 \= M2.

% Step 6: Filter only movies connected to "Star Wars"
generationRelativeToStarWars(M1, M2) :-
    starWarsDecade(D),
    movieDecade(SW, D),
    generation(SW, M1),
    generation(SW, M2),
    M1 \= M2.