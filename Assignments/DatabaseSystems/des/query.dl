% Problem 1
twoMovies(Name, Title1, Title2) :-
    casting(A, M1, _),
    casting(A, M2, _),
    M1 < M2,
    movie(M1, Title1, _, _, _),
    movie(M2, Title2, _, _, _),
    actor(A, Name).

% Problem 2
linkedMovies(From, To) :-
    movie(M1, From, _, _, _),
    movie(M2, To, _, _, _),
    casting(A, M1, _),
    casting(A, M2, _),
    M1 \= M2.

linkedMovies(From, To) :-
    linkedMovies(From, Intermediate),
    linkedMovies(Intermediate, To),
    From \= To.

% Problem 3
movieCastSize(Title, Count) :-
    movie(M, Title, _, _, _),
    count(casting(A, M, _), A, Count).

% Problem 4
starWarsDecade(D) :-
    movie(1, _, Y, _, _),
    D = (Y // 10) * 10.

movieDecade(M, D) :-
    movie(M, _, Y, _, _),
    D = (Y // 10) * 10.

linkedByActor(M1, M2) :-
    movieDecade(M1, D1),
    movieDecade(M2, D2),
    casting(A, M1, _),
    casting(A, M2, _),
    D1 < D2.  % Enforce later movie relationship

generationHelper(M1, M2) :-
    movieDecade(M1, D),
    movieDecade(M2, D),  % Same decade
    M1 \= M2.

generationHelper(M1, M2) :-
    generationHelper(M1, M3),
    linkedByActor(M3, M2),
    M1 \= M2.

generation(Title1, Title2) :-
    movie(M1, Title1, _, _, _),
    movie(M2, Title2, _, _, _),
    starWarsDecade(D),
    movieDecade(SW, D),
    generationHelper(SW, M1),
    generationHelper(SW, M2),
    M1 \= M2.

% I feel like I've made a real mess of this last problem, but I need to go to bed.